{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAMA,SAASC,EAAYC,GACnBH,EAAAI,OAAOC,QAAQF,GAEjB,SAASG,EAAWC,GACnBP,EAAAI,OAAOI,QAAQD,GAiBhB,SAASE,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,GACFF,EAAQ,uBAAwCM,OAAfT,EAAS,QAAYS,OAANR,EAAM,OAEtDG,EAAK,sBAAqCK,OAAfT,EAAS,QAAYS,OAANR,EAAM,SAEhDA,MAlCKS,SAASC,cAAc,SAE/BC,iBAAiB,UAStB,SAAsBC,GACpBA,EAAIC,iBAIL,IAHC,IAAgCC,EAAAF,EAAIG,cAA5Bf,EAAwBc,EAAxBd,MAAOgB,EAAiBF,EAAjBE,KAAMC,EAAWH,EAAXG,OACjBC,EAAeC,OAAOnB,EAAMoB,OAExBC,EAAI,EAAGA,GAAKJ,EAAOG,MAAOC,IAEjCvB,EAAcuB,EAAEH,GAChBI,KAAK/B,GACFgC,MAAM5B,GACTuB,GAAgBC,OAAOH,EAAKI,U","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix, { Notify } from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onFormSubmit)\n\nfunction onFulfilled(result) {\n  Notify.success(result);\n}\nfunction onRejected(error) {\n Notify.failure(error)\n}\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n  const { delay, step, amount } = evt.currentTarget;\n  let delayPromise = Number(delay.value);\n\n for (let i = 1; i <= amount.value; i++){\n\n   createPromise(i,delayPromise)\n  .then(onFulfilled)\n     .catch(onRejected); \n   delayPromise += Number(step.value);\n  };\n};\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      }\n      reject(`❌ Rejected promise ${position} in ${delay}ms`);\n    }\n      , delay)\n\n  });\n}"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$onFulfilled","result","Notify","success","$ce04d3a99e08e73b$var$onRejected","error","failure","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","concat","document","querySelector","addEventListener","evt","preventDefault","_currentTarget","currentTarget","step","amount","delayPromise","Number","value","i","then","catch"],"version":3,"file":"03-promises.5139f669.js.map"}